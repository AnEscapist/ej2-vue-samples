{
    "name": "Uploader",
    "directory": "uploader",
    "category": "Editors",
    "type": "update",
    "ftName": "file-upload",
    "samples": [
        {
            "url": "default",
            "name": "Default Functionalities",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates default functionalities of the file uploader component, including automatic upload and asynchronous mode options.",
            "api":{"Uploader": [ "asyncSettings", "dropArea" ]} 
        },
        {
            "url": "chunk-upload",
            "name": "Chunk Upload",
            "category": "Uploader",
            "type": "update",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to upload files as chunks in the file upload component, which helps when uploading a large file to a server.",
            "api":{"Uploader": [ "asyncSettings","dropArea" ]} 
        },
        {
            "url": "custom-file-list",
            "name": "Template",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to customize the file list with buttons using a template, and how to upload a file programmatically in the file upload component.",
            "api":{"Uploader": [ "asyncSettings","dropArea", "selected", "progress", "success", "failure"]}
        },
        {
            "url": "preload-files",
            "name": "Preload Files",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to preload files in the file upload component, which helps users view and manipulate server files.",
            "api":{"Uploader": [ "asyncSettings", "files", "dropArea" ]} 
        },
        {
            "url": "file-validation",
            "name": "File Validation",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample shows how to validate files before uploading them to a server by allowing or denying certain file extensions, setting minimum and maximum file sizes, and alerting users about duplicate files.",
            "api":{"Uploader": [ "asyncSettings", "allowedExtensions", "dropArea", "minFileSize", "maxFileSize", "selected" ]}
        },
        {
            "url": "image-preview",
            "name": "Image Preview",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to display a preview of an image file before and after uploading it to a server.",
            "api":{"Uploader": [ "asyncSettings", "allowedExtensions", "dropArea", "selected", "progress", "success", "failure"]}
        },
        {
            "url": "file-upload-with-forms",
            "name": "Form Support",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to integrate the file upload component in an HTML form (synchronous mode) and submit a form with selected files.",
            "api":{"Uploader": [ "dropArea", "autoUpload", "allowedExtensions", "selected"  ]} 
        },
        {
            "url": "custom-drop-area",
            "name": "Custom Drop Area",
            "category": "Uploader",
            "hideOnDevice": true,
            "description":"This sample demonstrates how to upload a file using drag and drop and how to configure a custom drop area for the file upload component.",
            "api":{"Uploader": [ "asyncSettings","dropArea", "template", "allowedExtensions", "success", "failure", "selected", "progress" ]}
        }
    ]
}
